//
// Created by Bill Evans on 1/15/25.
//

#include <stdlib.h>
#include <string.h>
//#include "list_of_item.h"


#if defined(W_SUFFIX_X)
#undef W_SUFFIX_X
#endif
#if defined(W_SUFFIX)
#undef W_SUFFIX
#endif
#if defined(HELPERS)
#undef HELPERS
#endif
#if defined(MEMBER)
#undef MEMBER
#endif
#if defined(STRUCT)
#undef STRUCT
#endif

#define W_SUFFIX_X(n,suff) n##_##suff
#define W_SUFFIX(n,suff) W_SUFFIX_X(n,suff)

#define STRUCT NAME
#define HELPERS W_SUFFIX(NAME,helpers)
#define MEMBER(m) W_SUFFIX(NAME,m)

void MEMBER(init)(struct STRUCT *list, int init_size) {
    list->helpers = HELPERS;
    list->num_items = 0;                                                                                    
    list->max_num_items = init_size;                                                                        
    list->items = (TYPE *)malloc(list->max_num_items * sizeof(TYPE));                                       
    memset(list->items, 0, list->max_num_items * sizeof(TYPE));                                             
}                                                                                                           
void MEMBER(grow)(struct STRUCT* list) {                                                   
    list->max_num_items *= 2;                                                                               
    /* One extra so that lists of pointers have a NULL entry at the end */                                  
    TYPE* new_list = malloc((list->max_num_items+1) * sizeof(TYPE));                                        
    for (int i=0; i<list->num_items; ++i) {                                                                 
        new_list[i] = list->items[i];                                                                       
    };                                                                                                      
    free(list->items);                                                                                      
    list->items = new_list;                                                                                 
}                                                                                                           
void MEMBER(append)(struct STRUCT* list, TYPE new_item) {                                  
    if (list->num_items == list->max_num_items) {                                                           
        MEMBER(grow)(list);                                                                        
    }                                                                                                       
    list->items[(list->num_items)++] = new_item;                                                            
}                                                                                                           
void MEMBER(insert)(struct STRUCT* list, TYPE new_item, int atIx) {                        
    if (list->num_items == list->max_num_items) {                                                           
        MEMBER(grow)(list);                                                                        
    }                                                                                                       
    for (int i=list->num_items++; i>atIx; --i) {                                                            
        list->items[i] = list->items[i-1];                                                                  
    }                                                                                                       
    list->items[atIx] = new_item;                                                                           
}                                                                                                           
void MEMBER(delete)(struct STRUCT* list) {
    MEMBER(clear)(list);                                                                           
    free(list->items);                                                                                      
}                                                                                                           
extern void MEMBER(clear)(struct STRUCT* list) {                                           
    for (int i=0; i<list->num_items; ++i) {                                                                 
        list->helpers.delete(list->items[i]);
        list->items[i] = list->helpers.null;                                                                
    }                                                                                                       
    list->num_items = 0;                                                                                    
}                                                                                                           
int MEMBER(is_empty)(struct STRUCT* list) {                                                
    return (list->num_items == 0);                                                                          
}

#undef NAME
#undef TYPE
